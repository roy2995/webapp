<style>
  .login-container {
    background-color: rgba(255, 255, 255, 0.7);
    padding: 40px;
    border-radius: 10px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    max-width: 400px;
    width: 100%;
    box-sizing: border-box;
  }

  input[type='text'],
  input[type='password'] {
    width: 100%;
    padding: 10px;
    margin: 10px 0;
    border-radius: 5px;
    border: 1px solid #ccc;
    box-sizing: border-box;
  }

  button {
    background-color: #6c63ff;
    color: white;
    padding: 10px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    width: 100%;
    font-size: 16px;
    transition: background-color 0.3s;
  }

  button:hover {
    background-color: #5752d7;
  }

  .message {
    margin-top: 10px;
  }
</style>

<div class="login-container">
  <h1>Iniciar Sesión</h1>
  <form id="loginForm">
    <label for="username">Usuario:</label>
    <input type="text" id="username" name="username" required />
    <label for="password">Contraseña:</label>
    <input type="password" id="password" name="password" required />
    <button type="submit">Entrar</button>
  </form>
  <p id="message" class="message"></p>
</div>

<script>
  const handleLogin = async (event: Event) => {
    event.preventDefault(); // Evita que el formulario recargue la página
    event.stopPropagation(); // Evita la propagación del evento

    const form = event.target as HTMLFormElement;
    const User = form.username.value;
    const Password = form.password.value;

    console.log(`User: ${User}, Password: ${Password}`);
    
    localStorage.setItem('debugLog', `User: ${User}, Password: ${Password}`);
  
    const messageElement = document.getElementById('message');

    if (messageElement) {
      try {
        const response = await fetch('http://localhost:4000/api/Users/login', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ User, Password }),
        });

        const result = await response.json();

        if (response.ok) {
          messageElement.textContent = 'Login exitoso';
          messageElement.style.color = 'green';
        } else {
          messageElement.textContent = `Error: ${result.body || result.message}`;
          messageElement.style.color = 'red';
        }
      } catch (error: unknown) {
        if (error instanceof Error) {
          messageElement.textContent = `Error: ${error.message}`;
        } else {
          messageElement.textContent = 'Error desconocido';
        }
        messageElement.style.color = 'red';
      }
    } else {
      console.error('No se encontró el elemento para mostrar mensajes.');
    }
  };

  // Asignar el manejador de eventos al formulario
  document.getElementById('loginForm')!.addEventListener('submit', handleLogin);
</script>
